{"version":3,"sources":["../node_modules/h8k-components/dist/esm-es5 lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","components/kanban-board/index.js","App.js","registerServiceWorker.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","KanbanBoard","state","tasks","name","stage","newTask","createNewTask","bind","handleAction","handleDelete","stagesNames","taskName","this","isExist","data","key","push","setState","type","index","findIndex","task","splice","stagesTasks","i","length","className","value","onChange","target","placeholder","data-testid","onClick","split","join","disabled","console","log","Component","App","header","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","applyPolyfills","defineCustomElements"],"mappings":"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","file":"static/js/main.ea2c2ad7.chunk.js","sourcesContent":["var map = {\n\t\"./h8k-logo_2.entry.js\": [\n\t\t24,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 19;\nmodule.exports = webpackAsyncContext;","import React, { Component } from \"react\";\nimport \"./index.css\";\n\nexport default class KanbanBoard extends Component {\n  constructor() {\n    super();\n    // Each task is uniquely identified by its name. \n    // Therefore, when you perform any operation on tasks, make sure you pick tasks by names (primary key) instead of any kind of index or any other attribute.\n    this.state = {\n      tasks: [\n            { name: '1', stage: 0 },\n            { name: '2', stage: 0 },\n        ],\n      newTask:\"\",\n    };\n    this.createNewTask = this.createNewTask.bind(this);\n    this.handleAction = this.handleAction.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.stagesNames = ['Backlog', 'To Do', 'Ongoing', 'Done'];\n  }\n\n  createNewTask(e){\n    let taskName = this.state.newTask;\n    let tasks = this.state.tasks;\n    let isExist = null;\n    if(taskName ){\n      tasks && tasks.map((data,key)=>{\n        return(data.name === taskName)? isExist = key : null;\n      })\n      if(!isExist){\n        tasks.push({\n          name: taskName,\n          stage: 0\n        });\n      }else{\n        tasks[isExist].stage = 0;\n      }\n      this.setState({tasks, newTask:\"\"})\n    }\n  }\n\n  handleAction(type,data){\n    let tasks = this.state.tasks;\n    let index = tasks.findIndex(task=>task.name === data);\n    // console.log(type,data);\n    if(type === 'forward'){\n      tasks[index].stage = ++tasks[index].stage;\n    }else{\n      tasks[index].stage = --tasks[index].stage;\n    }\n    this.setState({tasks})\n  }\n\n  handleDelete(data){\n    let tasks = this.state.tasks;\n    let index = tasks.findIndex(task=>task.name === data);\n    // console.log(index);    \n    tasks.splice(index,1);\n    this.setState({tasks}) \n  }\n\n  render() {\n    const { tasks,newTask } = this.state;\n\n    let stagesTasks = [];\n    for (let i = 0; i < this.stagesNames.length; ++i) {\n      stagesTasks.push([]);\n    }\n    for (let task of tasks) {\n      const stageId = task.stage;\n      stagesTasks[stageId].push(task);\n    }\n\n    return (\n      <div className=\"mt-20 layout-column justify-content-center align-items-center\">\n        <section className=\"mt-50 layout-row align-items-center justify-content-center\">\n          <input value={newTask} id=\"create-task-input\" type=\"text\" className=\"large\" onChange={(e)=>this.setState({newTask:e.target.value})} placeholder=\"New task name\" data-testid=\"create-task-input\"/>\n          <button type=\"submit\" onClick={(e)=>this.createNewTask(e)} className=\"ml-30\" data-testid=\"create-task-button\">Create task</button>\n        </section>\n\n        <div className=\"mt-50 layout-row\">\n            {stagesTasks.map((tasks, i) => {\n                return (\n                    <div className=\"card outlined ml-20 mt-0\" key={`${i}`}>\n                        <div className=\"card-text\">\n                            <h4>{this.stagesNames[i]}</h4>\n                            <ul className=\"styled mt-50\" data-testid={`stage-${i}`}>\n                                {tasks.map((task, index) => {\n                                    return <li className=\"slide-up-fade-in\" key={`${i}${index}`}>\n                                      <div className=\"li-content layout-row justify-content-between align-items-center\">\n                                        <span data-testid={`${task.name.split(' ').join('-')}-name`}>{task.name}</span>\n                                        <div className=\"icons\">\n                                          <button disabled={(!task.stage)?true: false} className=\"icon-only x-small mx-2\" data-testid={`${task.name.split(' ').join('-')}-back`} onClick={(e)=>this.handleAction('back',task.name)}>\n                                            <i className=\"material-icons\">arrow_back</i>\n                                          </button>\n                                          {console.log(task.stage)}\n                                          <button disabled={(task.stage === 3)?true: false} className=\"icon-only x-small mx-2\" data-testid={`${task.name.split(' ').join('-')}-forward`} onClick={(e)=>this.handleAction('forward',task.name)}>\n                                            <i className=\"material-icons\">arrow_forward</i>\n                                          </button>\n                                          <button className=\"icon-only danger x-small mx-2\" data-testid={`${task.name.split(' ').join('-')}-delete`} onClick={(e)=>this.handleDelete(task.name)}>\n                                            <i className=\"material-icons\">delete</i>\n                                          </button>\n                                        </div>\n                                      </div>\n                                    </li>\n                                })}\n                            </ul>\n                        </div>\n                    </div>\n                )\n            })}\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport 'h8k-components';\nimport KanbanBoard from './components/kanban-board/index.js';\n\nconst title = \"Kanban Board\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <h8k-navbar header={title}></h8k-navbar>\n        <KanbanBoard/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport {applyPolyfills, defineCustomElements} from 'h8k-components/loader';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n\napplyPolyfills().then(() => {\n    defineCustomElements(window);\n}) "],"sourceRoot":""}